@startuml
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline

skinparam classAttributeIconSize 0

title Sequence Diagram (SD) - UC025

actor Operator as Actor
participant DisableCandidateUI as UI <<presentation>>
participant DisableCandidateController as Controller <<application>>
participant PersistenceContext as Persistence <<persistence>>
participant RepositoryFactory as Factory <<factory>>
database CandidateRepository as Repository <<repository>>
participant CandidateManagementService as Service <<service>>
participant "candidate:Candidate" as Domain <<domain>>

Actor --> UI: Disable Candidate
activate UI
    UI -> Controller: activeCandidates()
    activate Controller

        Controller -> Persistence: repositories()
        activate Persistence
            note right of Persistence: creates in JPA
            Persistence -> Factory: create
            Persistence --> Controller: factory
        deactivate Persistence

        Controller -> Factory: candidates()
        activate Factory
            Factory -> Repository: create
            Factory --> Controller: candidateRepository
        deactivate Factory

        Controller -> Service: activeCandidates()
        activate Service

            Service -> Repository: activeCandidates()
            activate Repository

                Repository --> Service: activeCandidates
            deactivate Repository

            loop for all activeCandidates
                Service -> Domain: name()
                Service -> Domain: email()
                activate Domain

                    Domain --> Service: candidate's details
                deactivate Domain
            end loop

            Service --> Controller: candidates with respective details
        deactivate Service

        Controller --> UI: candidates
    deactivate Controller

    UI --> Actor: display candidates

    Actor -> UI: select candidate to disable

    UI -> Controller: disableCandidate(candidate)
    activate Controller

        Controller -> Repository: find()
        activate Repository

            Repository --> Controller: candidate
        deactivate Repository

        Controller -> Service: disableCandidate(candidate)
        activate Service

            Service -> Domain: disable()
            activate Domain

                Domain --> Service: candidate
            deactivate Domain

            Service -> Repository: save()
            activate Repository

                Repository --> Service: candidate
            deactivate Repository

            Service --> Controller: candidate
        deactivate Service

        Controller --> UI: candidate
    deactivate Controller

    UI --> Actor: candidate disabled
deactivate UI

@enduml